* TODO
** Square the U/L term?? Max of 100?
** Rarefaction curves
*** bash + samtools + resampling (100 times?)
*** How many divisions??
** Dissimilarity term
*** Each read has a dissimilarity to other reads in a group:
*** The number of bases that the read has not shared by the other.
*** Under maximum saturation (T is the triangular number function):
**** Left most read (5'):
***** T(L-1)
**** Next left most read:
***** T(L-1) - (L-1) + 1
**** Third read:
***** T(L-1) - (L-1) - (L-2) + 1 + 2
**** Etc.
*** For each read 'i' (a 5' index), a summed dissimilarity can be calculated as:
**** T(L-1) - [ T(L-1) - T(L-j) ] + T(j-1)
**** Simplified: T(L-j) + T(j-1)
*** The definition of a triangular number: T(n) = n(n+1)/2
*** This allows us to simplify
**** (L-j)(L-j+1)/2 + (j-1)(j-1+1)/2
**** [ (L-j)(L-j+1) + (j-1)(j-1+1) ] / 2
**** ( L^2 - Lj + L - Lj + j^2 - j + j^2 - j ) / 2
**** ( L^2 - 2Lj + L + 2j^2 - 2j ) / 2
**** = L^2/2 - Lj + L/2 + j^2 - j
*** Thus, dissimilarities (under max saturation) = (1..L).to_a.map {|j| L^2/2 - Lj + L/2 + j^2 - j }
*** And average dissimilarity (under max saturation) = dissimilarities.reduce(:+) / L
*** def tri(x,n=0)
***   return x == 0 ? n : tri(x-1,n+x)
*** end
*** 
** Similarity term (deprectated)
*** Triangular number defined as
*** T(n) = n(n+1)/2
*** Maximum overlap determined by function of read length L
*** The read with most 'even' overlaps is directly in the middle
*** EXAMPLES:
**** Left most read (a)
***** T(L-1)
**** Next left-most read (b)
***** (L-1) + T(L-1) - 1
**** (c)
***** (L-2) + (L-1) + T(L-1) - 2 - 1
*** For each of j reads (aligned in best case scenario)
**** Sum overlaps with all other reads:
**** f(L) = 2*T(L-1) - T(J-1) - T(L - J)
**** f(L) = (L-1)(L-1+1) - (J-1)(J-1+1)/2 - (L-J)(L-J+1)/2
**** f(L) = L(L-1) - J*(J-1)/2 - (L-J)(L-J+1)/2
**** f(L) = L^2 - L + (-J*J + J)/2 - (L-J)(L-J+1)/2
**** 2f(L) = 2*(L^2) - 2L - J^2 + J - (L-J)(L-J+1)
**** 2f(L) = 2*(L^2) - 2L - J^2 + J - (L^2 - 2LJ + L + J^2 - J)
**** 2f(L) = 2*(L^2) - 2L - J^2 + J - L^2 + 2LJ - L - J^2 + J
**** 2f(L) = 2*(L^2) - L^2 - J^2 - J^2 + 2LJ - 2L - L + J + J
**** 2f(L) = L^2 - 2*(J^2) + 2LJ - 3L + 2J
**** f(L) = -J^2 + (L^2)/2 + LJ - 3L/2 + J
*** For the first read, the summed overlap is equal to the triangular number of L - 1:
*** e.g. L = 76, j = 1 : summed overlap = 2850
*** AND f(L) = 2850  as well.
* Notes
** U = u/L
** U/L is the number of unique reads at that base, length normalized
** U*O/L vs. 200*U*O/(L^2)
** the average summed overlap is O/(L)
** average because different reads in the formation have different summed overlaps
** the average average overlap is 2L/3 or O/L/(L-1) or O/(L^2-L)
** 
** D = d /
** the average summed dissimilarity is D/(L)
** average because different reads in the formation have different summed dissimilarities
** the average average dissimilarity is L/3 or D/L/(L-1) or D/(L^2-L)
** This matches the average similarity nicely...
** 
** u*d / L*L*(L-1)
* Bugs
